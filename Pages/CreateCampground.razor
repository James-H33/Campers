@page "/create-campground"

@using Campers.Models
@using Campers.Services.Interfaces
@using Microsoft.AspNetCore.Authorization

@attribute [Authorize] 

@inject ICampgroundService CampgroundService
@inject NavigationManager NavigationManager
@inject IUserProfileService UserProfileService  

<div class="create-campground-page">
    <h3>Create Campground</h3>

    <EditForm class="form" Model="@campground" OnValidSubmit="@HandleValidSubmit">
        <DataAnnotationsValidator />
        <ValidationSummary />

        <div class="form-input">
            <label>Title</label>
            <InputText @bind-Value="campground.Title" placeholder="Title" />
        </div>

        <div class="form-input">
            <label>Description</label>
            <InputText @bind-Value="campground.Description" placeholder="Description" />
        </div>

        <div class="form-input">
            <label>Image Url</label>
            <InputText @bind-Value="campground.Image" placeholder="Image Url" />
        </div>

        <button type="submit">Submit</button>
    </EditForm>
</div>

@code {
    public Campground campground { get; set; } = new Campground();

    private async Task HandleValidSubmit()
    {
        var profile = await UserProfileService.GetProfile();
        campground.UserId = profile.Id;
        var result = await CampgroundService.CreateCampground(campground);
        NavigationManager.NavigateTo($"/campground/{result.Id}");
    }
}
