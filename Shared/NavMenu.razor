@using Microsoft.AspNetCore.Authorization
@using Campers.Models
@using Campers.Security
@using Campers.Services.Interfaces


@inject NavigationManager Url
@inject IUserProfileService UserProfileService
@inject IAuthService AuthService
@inject IStateService StateService
@inject AuthenticationStateProvider AuthenticationStateProvider

<div class="nav-menu">
    <div class="nav-menu-content">
        <h4 @onclick="@Navigate">
            YelpCamp
        </h4>

        <div class="nav-menu-items">
            @if (isLoggedIn)
            {
                <div class="nav-menu-item">
                    <div>@profile.Username</div>
                </div>

                <div class="nav-menu-item">
                    <AnchorTag OnClick="@Logout" HasLink="false">Logout</AnchorTag>
                </div>
            }
            else
            {
                <div class="nav-menu-item">
                  <AnchorTag LinkUrl="login">Login</AnchorTag>
                </div>

                <div class="nav-menu-item">
                  <AnchorTag LinkUrl="signup">Sign up</AnchorTag>
                </div>
            }
        </div>
    </div>
</div>

@code
{
    public bool isLoggedIn = false;

    public UserProfile profile = new UserProfile();

    protected async override Task OnInitializedAsync()
    {
        StateService.WatchStateChange(StateChanged);

        await UpdateIsLoggedIn();
    }

    public void StateChanged(ApplicationState state)
    {
        UpdateIsLoggedIn();
    }

    public async Task UpdateIsLoggedIn()
    {
        profile = await UserProfileService.GetProfile();
        isLoggedIn = profile.isLoggedIn();
        StateHasChanged();
    }

    public void Navigate()
    {
        Url.NavigateTo("");
    }

    public async Task Logout()
    {
        await AuthService.Logout();
        await StateService.UpdateState();
        ((CampersAuthenticationStateProvider)AuthenticationStateProvider).MarkUserAsUnAuthenticated();
        Url.NavigateTo("");
    }
}
