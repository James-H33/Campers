<div class="pager">
  <div class="pager-pages">
    <div disabled="IsPrevDisabled"  class="pager-page" @onclick="@SetPageAsFirst">
      First
    </div>
    @foreach (var page in pages)
    {
      var i = page;
      <div class="@GetPagerClass(i)" @onclick="@(() => PageChange.Invoke(i))">
        @i
      </div>
    }
    <div class="pager-page" @onclick="@SetPageAsLast">
      Last
    </div>
  </div>
</div>

@code {
  [Parameter]
  public int Count { get; set; } = 1;

  [Parameter]
  public int ItemsPerPage { get; set; } = 10;

  [Parameter]
  public int Page { get; set; } = 1;

  [Parameter]
  public Action<int> PageChange { get; set; }

  public bool IsPrevDisabled { get; set; }

  public string GetPagerClass(int index)
  {
    return Page == index ? "pager-page active" : "pager-page";
  }

  public int totalPages() {
    if (Count <= ItemsPerPage)
    {
      return 1;
    }

    return Count % ItemsPerPage > 0 ? (Count / ItemsPerPage) + 1  : Count / ItemsPerPage;
  }

  public List<int> pages
  {
    get {
      var result = new List<int>();
      var totalPagesNum = totalPages();

      if (Page > 1) {
        result.Add(Page - 1);
      }

      result.Add(Page);

      if (Page < totalPagesNum) {
        result.Add(Page + 1);
      }

      return result;
    }
    set { }
  }

  public void SetPageAsFirst()
  {
    PageChange.Invoke(1);
  }

  public void SetPageAsLast()
  {
    PageChange.Invoke(totalPages());
  }
}
